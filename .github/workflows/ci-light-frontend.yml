name: üí° Match-Hub-UI Push - Light CI

on:
  push:
    branches:
      - "**" # Match all branches
      - "!main" # Exclude the main branch (which runs the CD pipeline)
    paths:
      - "apps/match-hub-ui/**"
      - "package.json"
      - "package-lock.json"

# CONCURRENCY: Ensures only the latest commit on a branch is processed, cancelling older runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-build:
    name: Verify Build Success (Match-Hub-UI)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # CACHING: Caches node_modules based on the lock file content for speed.
      - name: Setup Node and Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          # REMOVED: cache: 'npm' was causing the root package.json ENOENT error
          cache-dependency-path: "apps/match-hub-ui/package-lock.json"

      - name: Install Dependencies
        # Using 'npm install' to bypass strict lock file checks
        run: npm install --no-fund
        working-directory: apps/match-hub-ui

      - name: üß™ Run All Tests (Unit & E2E)
        # This new command chains the unit tests (headless) and the E2E tests (which includes build/serve)
        run: npm run test:full
        working-directory: apps/match-hub-ui
      # --- ARTIFACT UPLOAD STEP (MAKES REPORT VIEWABLE) ---
      - name: ‚¨ÜÔ∏è Upload Coverage Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          # FINAL FIX: Using the exact sub-folder name that the CLI creates.
          # Since the working-directory is apps/match-hub-ui, this path
          # correctly resolves to apps/match-hub-ui/coverage/match-hub-ui.
          path: apps/match-hub-ui/coverage/**
          retention-days: 7
          if-no-files-found: warn
      - name: List files in the current directory and reports folder
        run: |
          echo "--- Files in current working directory (\$GITHUB_WORKSPACE) ---"
          pwd
          ls -la
          echo ""
          echo "--- Files in the generated app root directory ---"
          ls -la apps/match-hub-ui          
          echo "--- Files in the generated 'coverage' directory ---"
          ls -la apps/match-hub-ui/coverage/match-hub-ui
      - name: Simple Build Success Message
        run: echo "‚úÖ Match-Hub-UI build check passed quickly."
